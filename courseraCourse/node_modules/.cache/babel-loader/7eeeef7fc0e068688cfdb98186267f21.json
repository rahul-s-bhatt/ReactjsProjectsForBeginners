{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, author, comment) {\n  return function (dispatch) {\n    var newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + \"comments\", {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      throw error;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch(addComment(response));\n    }).catch(function (error) {\n      console.log(\"post comments\", error.message);\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\n    });\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + \"dishes\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + \"comments\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + \"promotions\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading());\n    return fetch(baseUrl + \"leaders\").then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var postFeedback = function postFeedback(firstname, lastname, telnum, email, agree, contactType, message) {\n  return function (dispatch) {\n    var newFeedback = {\n      firstname: firstname,\n      lastname: lastname,\n      telnum: telnum,\n      email: email,\n      agree: agree,\n      contactType: contactType,\n      message: message\n    };\n    return fetch(baseUrl + \"feedback\", {\n      method: \"POST\",\n      body: JSON.stringify(newFeedback),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      throw error;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return alert(\"Thank you for your feedback!\" + JSON.stringify(response));\n    }).catch(function (error) {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\BHATT\\Desktop\\ReactjsProjectsForBeginners\\courseraCourse\\src\\redux\\ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchDishes","dishesLoading","errmess","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFeedback","firstname","lastname","telnum","email","agree","contactType","newFeedback"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log(\"post comments\", error.message);\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\n    });\n};\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading());\n\n  return fetch(baseUrl + \"dishes\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\n\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n\nexport const postFeedback = (\n  firstname,\n  lastname,\n  telnum,\n  email,\n  agree,\n  contactType,\n  message\n) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response =>\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n    )\n    .catch(error => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}